#
#
# File di configurazione per Proxy2Tor.
# Il file di configurazione permette di configurare i servizi TorDNS e Web Proxy.
# Inoltre è possibile configurare il percorso delle chiavi RSA pubblica e privata 
# ottenute per la generazione di un .onion. al fine di rendere persistenti. 
#
# Indirizzo di ascolto per il servizio di risoluzione DNS attraverso la rete TOR.
dns.tor.bind.address = 127.0.1.1
dns.tor.bind.port = 5553
# Timeout per la risoluzione con indirizzi ip fittizi per .onion.
dns.tor.onion.resolution.timeout = 10000

# Hidden service risoluzione interna. Indirizzo iniziale
onion.binder.address.startfrom = 127.1.0.1
onion.binder.address.subnet = 127.1.0.0
onion.binder.address.start.netmask = 16
onion.binder.address.increment = 1

# ExpirationTime di un OnionBind in millisecondi, 5 minuti per default.
onion.binder.expirationtimemillisec = 300000 

# Indirizzo di ascolto del proxy SOCKS Tor
proxy.tor.bind.address = 127.0.0.1
proxy.tor.bind.port = 9051

# WebProxyServer impostazioni
#
# Timeout per l'apertura della SOCKS Tor
proxy.web.server.socks.timeout = 10000
# Porta di ascolto del Web Proxy.
proxy.web.server.bind.port = 4567

# Porte associate al tipo di servizio.
# Sulle porte http, essendo il payload non cifrato si riesce a fare il log degli header.
# Per questo motivo è possibile aggiungere qui tutte le porte conosciute di servizi http
# su cui si vuole abilitare il logger.
http.service.ports 	= 80, 8080
https.service.ports = 443

# Percorso per il salvataggio dei files di log.
logger.log.files.path = /tmp

# Path completo del package delle classi dove risiedono i loggers da caricare.
logger.path = it.uniroma2.sii.log.impl
 
# Nome dei loggers che si vogliono caricare, devono essere separati da una virgola.
logger.classes = FileLogger  

# Percorso dove salvare le chiavi RSA pubblica e privata e l'indirizzo .onion generato.
onion.generator.dir.path = /tmp

# Url di connessione al DB locale. Nel caso di DerbyDB (il database di default)
# l'attributo del parametro "create" serve per creare il DB
# qualora questo non esista.
# Se il DB esiste e viene lasciato create=true non viene cancellato e ricreato
# il DB ma sulla console viene stampato ogni volta che si accede al DB un
# messaggio di warning che sottolinea il fatto di utilizzare un DB già creato.
db.url = jdbc:derby:target/onionDB;create=true

# All'avvio della applicazione permette fare il drop di tutte le tabelle
# esistenti nel DB locale per ricrearle tutte vuote.
hibernate.hbm2ddl.auto.value = create

# Parametro che abilita la generazione di un URl di Tor (.onion) di test durante l'avvio del Proxy2Tor.
onion.generator.main.app.start = true
